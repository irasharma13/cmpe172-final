{"version":3,"sources":["config.js","components/AppliedRoute.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","containers/Home.js","components/LoaderButton.js","libs/hooksLib.js","containers/Login.js","libs/awsLib.js","containers/Notes.js","containers/Signup.js","containers/NewNote.js","components/BillingForm.js","containers/Settings.js","containers/NotFound.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["MAX_ATTACHMENT_SIZE","process","REACT_APP_STAGE","STRIPE_KEY","s3","REGION","BUCKET","apiGateway","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","AppliedRoute","C","component","appProps","rest","render","props","AuthenticatedRoute","isAuthenticated","to","location","pathname","search","UnauthenticatedRoute","redirect","name","url","window","href","replace","results","RegExp","exec","decodeURIComponent","querystring","Home","useState","notes","setNotes","isLoading","setIsLoading","useEffect","a","API","get","alert","onLoad","className","PageHeader","ListGroup","concat","map","note","i","key","noteId","ListGroupItem","header","content","trim","split","Date","createdAt","toLocaleString","renderNotesList","src","alt","LoaderButton","disabled","Button","Glyphicon","glyph","children","useFormFields","initialState","fields","setValues","event","target","id","value","Login","email","password","handleFieldChange","preventDefault","Auth","signIn","userHasAuthenticated","message","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","block","length","s3Upload","file","filename","now","Storage","vault","put","contentType","stored","Notes","useRef","setNote","setContent","isDeleting","setIsDeleting","saveNote","match","params","body","current","size","config","attachment","history","push","confirm","del","attachmentURL","Static","rel","componentClass","e","files","bsStyle","onClick","Signup","confirmPassword","confirmationCode","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","HelpBlock","NewNote","post","injectStripe","storage","isProcessing","setIsProcessing","isCardComplete","setIsCardComplete","stripe","createToken","token","error","min","placeholder","complete","style","base","fontSize","fontFamily","Settings","details","source","apiKey","NotFound","Routes","path","exact","withRouter","isAuthenticating","setIsAuthenticating","currentSession","signOut","Navbar","fluid","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","Boolean","hostname","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.289b3fd9.chunk.js","sourcesContent":["const dev = {\n  STRIPE_KEY: \"pk_test_v1amvR35uoCNduJfkqGB8RLD\",\n  s3: {\n    REGION: \"us-east-1\",\n    BUCKET: \"notes-app-2-api-dev-attachmentsbucket-6wbhcogxihbo\"\n  },\n  apiGateway: {\n    REGION: \"us-east-1\",\n    URL: \"https://api.serverless-stack.seed-demo.club/dev\"\n  },\n  cognito: {\n    REGION: \"us-east-1\",\n    USER_POOL_ID: \"us-east-1_yKOQs2dWK\",\n    APP_CLIENT_ID: \"1h0r8s763vnqj4id6dvguanp8f\",\n    IDENTITY_POOL_ID: \"us-east-1:dedfd34a-9d7e-4bf2-a1dd-ef603bac2ecb\"\n  }\n};\n\nconst prod = {\n  STRIPE_KEY: \"pk_test_v1amvR35uoCNduJfkqGB8RLD\",\n  s3: {\n    REGION: \"us-east-1\",\n    BUCKET: \"notes-app-2-api-prod-attachmentsbucket-1h5n5ttet1hy0\"\n  },\n  apiGateway: {\n    REGION: \"us-east-1\",\n    URL: \"https://api.serverless-stack.seed-demo.club/prod\"\n  },\n  cognito: {\n    REGION: \"us-east-1\",\n    USER_POOL_ID: \"us-east-1_TwYpMXIJH\",\n    APP_CLIENT_ID: \"6kfg0o7qo2i3ndk2ur906sc5fd\",\n    IDENTITY_POOL_ID: \"us-east-1:f4c754b4-24f0-4754-8596-30afedece1fc\"\n  }\n};\n\n// Default to dev if not set\nconst config = process.env.REACT_APP_STAGE === 'prod'\n  ? prod\n  : dev;\n\nexport default {\n  // Add common config values here\n  MAX_ATTACHMENT_SIZE: 5000000,\n  ...config\n};\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\n\nexport default function AppliedRoute({ component: C, appProps, ...rest }) {\n  return (\n    <Route {...rest} render={props => <C {...props} {...appProps} />} />\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nexport default function AuthenticatedRoute({ component: C, appProps, ...rest }) {\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        appProps.isAuthenticated\n          ? <C {...props} {...appProps} />\n          : <Redirect\n              to={`/login?redirect=${props.location.pathname}${props.location\n                .search}`}\n            />}\n    />\n  );\n}\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction querystring(name, url = window.location.href) {\n  name = name.replace(/[[]]/g, \"\\\\$&\");\n\n  const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\n  const results = regex.exec(url);\n\n  if (!results) {\n    return null;\n  }\n  if (!results[2]) {\n    return \"\";\n  }\n\n  return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n}\n\nexport default function UnauthenticatedRoute({ component: C, appProps, ...rest }) {\n  const redirect = querystring(\"redirect\");\n  return (\n    <Route\n      {...rest}\n      render={props =>\n        !appProps.isAuthenticated\n          ? <C {...props} {...appProps} />\n          : <Redirect\n              to={redirect === \"\" || redirect === null ? \"/\" : redirect}\n            />}\n    />\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { PageHeader, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport \"./Home.css\";\n\nexport default function Home(props) {\n  const [notes, setNotes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function onLoad() {\n      if (!props.isAuthenticated) {\n        return;\n      }\n\n      try {\n        const notes = await loadNotes();\n        setNotes(notes);\n      } catch (e) {\n        alert(e);\n      }\n\n      setIsLoading(false);\n    }\n\n    onLoad();\n  }, [props.isAuthenticated]);\n\n  function loadNotes() {\n    return API.get(\"notes\", \"/notes\");\n  }\n\n  function renderNotesList(notes) {\n    return [{}].concat(notes).map((note, i) =>\n      i !== 0 ? (\n        <LinkContainer key={note.noteId} to={`/notes/${note.noteId}`}>\n          <ListGroupItem header={note.content.trim().split(\"\\n\")[0]}>\n            {\"Created: \" + new Date(note.createdAt).toLocaleString()}\n          </ListGroupItem>\n        </LinkContainer>\n      ) : (\n        <LinkContainer key=\"new\" to=\"/notes/new\">\n          <ListGroupItem>\n            <h4>\n              <b>{\"\\uFF0B\"}</b> Add a new photo\n            </h4>\n          </ListGroupItem>\n        </LinkContainer>\n      )\n    );\n  }\n\n  function renderLander() {\n    return (\n      <div className=\"lander\">\n        <h1>Photo AWganizer</h1>\n        <p>A simple Photo Organizer</p>\n        <img src=\"https://i.ibb.co/WFbk5mf/dog.png\" alt=\"Dogs\"></img>\n      </div>\n    );\n  }\n\n  function renderNotes() {\n    return (\n      <div className=\"notes\">\n        <PageHeader>Your Photos</PageHeader>\n        <ListGroup>\n          {!isLoading && renderNotesList(notes)}\n        </ListGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Home\">\n      {props.isAuthenticated ? renderNotes() : renderLander()}\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Button, Glyphicon } from \"react-bootstrap\";\nimport \"./LoaderButton.css\";\n\nexport default function LoaderButton({\n  isLoading,\n  className = \"\",\n  disabled = false,\n  ...props\n}) {\n  return (\n    <Button\n      className={`LoaderButton ${className}`}\n      disabled={disabled || isLoading}\n      {...props}\n    >\n      {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\n      {props.children}\n    </Button>\n  );\n}\n","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value\n      });\n    }\n  ];\n}\n","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Login.css\";\n\nexport default function Login(props) {\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\"\n  });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      await Auth.signIn(fields.email, fields.password);\n      props.userHasAuthenticated(true);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Login\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}\n","import { Storage } from \"aws-amplify\";\n\nexport async function s3Upload(file) {\n  const filename = `${Date.now()}-${file.name}`;\n\n  const stored = await Storage.vault.put(filename, file, {\n    contentType: file.type\n  });\n\n  return stored.key;\n}\n","import React, { useRef, useState, useEffect } from \"react\";\nimport { API, Storage } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport config from \"../config\";\nimport \"./Notes.css\";\n\nexport default function Notes(props) {\n  const file = useRef(null);\n  const [note, setNote] = useState(null);\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    function loadNote() {\n      return API.get(\"notes\", `/notes/${props.match.params.id}`);\n    }\n\n    async function onLoad() {\n      try {\n        const note = await loadNote();\n        const { content, attachment } = note;\n\n        if (attachment) {\n          note.attachmentURL = await Storage.vault.get(attachment);\n        }\n\n        setContent(content);\n        setNote(note);\n      } catch (e) {\n        alert(e);\n      }\n    }\n\n    onLoad();\n  }, [props.match.params.id]);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function formatFilename(str) {\n    return str.replace(/^\\w+-/, \"\");\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  function saveNote(note) {\n    return API.put(\"notes\", `/notes/${props.match.params.id}`, {\n      body: note\n    });\n  }\n\n  async function handleSubmit(event) {\n    let attachment;\n\n    event.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n          1000000} MB.`\n      );\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      if (file.current) {\n        attachment = await s3Upload(file.current);\n      }\n\n      await saveNote({\n        content,\n        attachment: attachment || note.attachment\n      });\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  function deleteNote() {\n    return API.del(\"notes\", `/notes/${props.match.params.id}`);\n  }\n\n  async function handleDelete(event) {\n    event.preventDefault();\n\n    const confirmed = window.confirm(\n      \"Are you sure you want to delete this note?\"\n    );\n\n    if (!confirmed) {\n      return;\n    }\n\n    setIsDeleting(true);\n\n    try {\n      await deleteNote();\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsDeleting(false);\n    }\n  }\n\n  return (\n    <div className=\"Notes\">\n      {note && (\n        <form onSubmit={handleSubmit}>\n          \n          {note.attachment && (\n            <FormGroup>\n              <ControlLabel>Picture</ControlLabel>\n              <FormControl.Static>\n                <a\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                  href={note.attachmentURL}\n// Making Image\n                >\n                  \n                  <img src=\"note.attachmentURL\" alt=\"picture1\"></img>\n                  {formatFilename(note.attachment)}\n                </a>\n              </FormControl.Static>\n            </FormGroup>\n\n            \n          )}\n\n<FormGroup controlId=\"content\">\n            <FormControl\n              value={content}\n              componentClass=\"textarea\"\n              onChange={e => setContent(e.target.value)}\n            />\n          </FormGroup>\n          <FormGroup controlId=\"file\">\n            {!note.attachment && <ControlLabel>Attachment</ControlLabel>}\n            <FormControl onChange={handleFileChange} type=\"file\" />\n          </FormGroup>\n          <LoaderButton\n            block\n            type=\"submit\"\n            bsSize=\"large\"\n            bsStyle=\"primary\"\n            isLoading={isLoading}\n            disabled={!validateForm()}\n          >\n            Save\n          </LoaderButton>\n          <LoaderButton\n            block\n            bsSize=\"large\"\n            bsStyle=\"danger\"\n            onClick={handleDelete}\n            isLoading={isDeleting}\n          >\n            Delete\n          </LoaderButton>\n        </form>\n      )}\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport {\n  HelpBlock,\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./Signup.css\";\n\nexport default function Signup(props) {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\"\n  });\n  const [newUser, setNewUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n\n      props.userHasAuthenticated(true);\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e.message);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <form onSubmit={handleConfirmationSubmit}>\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n          <ControlLabel>Confirmation Code</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"tel\"\n            onChange={handleFieldChange}\n            value={fields.confirmationCode}\n          />\n          <HelpBlock>Please check your email for the code.</HelpBlock>\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateConfirmationForm()}\n        >\n          Verify\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderForm() {\n    return (\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <ControlLabel>Confirm Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Signup\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  return (\n    <div className=\"Signup\">\n      {newUser === null ? renderForm() : renderConfirmationForm()}\n    </div>\n  );\n}\n","import React, { useRef, useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport config from \"../config\";\nimport \"./NewNote.css\";\n\nexport default function NewNote(props) {\n  const file = useRef(null);\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${config.MAX_ATTACHMENT_SIZE /\n          1000000} MB.`\n      );\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      const attachment = file.current\n        ? await s3Upload(file.current)\n        : null;\n\n      await createNote({ content, attachment });\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  function createNote(note) {\n    return API.post(\"notes\", \"/notes\", {\n      body: note\n    });\n  }\n\n  return (\n    <div className=\"NewNote\">\n      <form onSubmit={handleSubmit}>\n        \n        <FormGroup controlId=\"file\">\n          <ControlLabel>Upload the photo here</ControlLabel>\n          <FormControl onChange={handleFileChange} type=\"file\" />\n        </FormGroup>\n\n        <FormGroup controlId=\"content\">\n          <FormControl\n            value={content}\n            componentClass=\"textarea\"\n            onChange={e => setContent(e.target.value)}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          bsStyle=\"primary\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Create\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport { CardElement, injectStripe } from \"react-stripe-elements\";\nimport LoaderButton from \"./LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./BillingForm.css\";\n\nfunction BillingForm({ isLoading, onSubmit, ...props }) {\n  const [fields, handleFieldChange] = useFormFields({\n    name: \"\",\n    storage: \"\"\n  });\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isCardComplete, setIsCardComplete] = useState(false);\n\n  isLoading = isProcessing || isLoading;\n\n  function validateForm() {\n    return (\n      fields.name !== \"\" &&\n      fields.storage !== \"\" &&\n      isCardComplete\n    );\n  }\n\n  async function handleSubmitClick(event) {\n    event.preventDefault();\n\n    setIsProcessing(true);\n\n    const { token, error } = await props.stripe.createToken({ name: fields.name });\n\n    setIsProcessing(false);\n\n    onSubmit(fields.storage, { token, error });\n  }\n\n  return (\n    <form className=\"BillingForm\" onSubmit={handleSubmitClick}>\n      <FormGroup bsSize=\"large\" controlId=\"storage\">\n        <ControlLabel>Storage</ControlLabel>\n        <FormControl\n          min=\"0\"\n          type=\"number\"\n          value={fields.storage}\n          onChange={handleFieldChange}\n          placeholder=\"Number of notes to store\"\n        />\n      </FormGroup>\n      <hr />\n      <FormGroup bsSize=\"large\" controlId=\"name\">\n        <ControlLabel>Cardholder&apos;s name</ControlLabel>\n        <FormControl\n          type=\"text\"\n          value={fields.name}\n          onChange={handleFieldChange}\n          placeholder=\"Name on the card\"\n        />\n      </FormGroup>\n      <ControlLabel>Credit Card Info</ControlLabel>\n      <CardElement\n        className=\"card-field\"\n        onChange={e => setIsCardComplete(e.complete)}\n        style={{\n          base: { fontSize: \"18px\", fontFamily: '\"Open Sans\", sans-serif' }\n        }}\n      />\n      <LoaderButton\n        block\n        type=\"submit\"\n        bsSize=\"large\"\n        isLoading={isLoading}\n        disabled={!validateForm()}\n      >\n        Purchase\n      </LoaderButton>\n    </form>\n  );\n}\n\nexport default injectStripe(BillingForm);\n","import React, { useState } from \"react\";\nimport { API } from \"aws-amplify\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport BillingForm from \"../components/BillingForm\";\nimport config from \"../config\";\nimport \"./Settings.css\";\n\nexport default function Settings(props) {\n  const [isLoading, setIsLoading] = useState(false);\n\n  function billUser(details) {\n    return API.post(\"notes\", \"/billing\", {\n      body: details\n    });\n  }\n\n  async function handleFormSubmit(storage, { token, error }) {\n    if (error) {\n      alert(error);\n      return;\n    }\n\n    setIsLoading(true);\n\n    try {\n      await billUser({\n        storage,\n        source: token.id\n      });\n\n      alert(\"Your card has been charged successfully!\");\n      props.history.push(\"/\");\n    } catch (e) {\n      alert(e);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"Settings\">\n      <StripeProvider apiKey={config.STRIPE_KEY}>\n        <Elements>\n          <BillingForm\n            isLoading={isLoading}\n            onSubmit={handleFormSubmit}\n          />\n        </Elements>\n      </StripeProvider>\n    </div>\n  );\n}\n","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AppliedRoute from \"./components/AppliedRoute\";\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\n\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\";\nimport Notes from \"./containers/Notes\";\nimport Signup from \"./containers/Signup\";\nimport NewNote from \"./containers/NewNote\";\nimport Settings from \"./containers/Settings\";\nimport NotFound from \"./containers/NotFound\";\n\nexport default function Routes({ appProps }) {\n  return (\n    <Switch>\n      <AppliedRoute path=\"/\" exact component={Home} appProps={appProps} />\n      <UnauthenticatedRoute path=\"/login\" exact component={Login} appProps={appProps} />\n      <UnauthenticatedRoute path=\"/signup\" exact component={Signup} appProps={appProps} />\n      <AuthenticatedRoute path=\"/settings\" exact component={Settings} appProps={appProps} />\n      <AuthenticatedRoute path=\"/notes/new\" exact component={NewNote} appProps={appProps} />\n      <AuthenticatedRoute path=\"/notes/:id\" exact component={Notes} appProps={appProps} />\n      {/* Finally, catch all unmatched routes */}\n      <Route component={NotFound} />\n    </Switch>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport Routes from \"./Routes\";\nimport \"./App.css\";\n\nfunction App(props) {\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n\n  useEffect(() => {\n    onLoad();\n  }, []);\n\n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        alert(e);\n      }\n    }\n\n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n\n    userHasAuthenticated(false);\n\n    props.history.push(\"/login\");\n  }\n\n  return (\n    !isAuthenticating && (\n      <div className=\"App container\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\">Photo AWganizer</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav pullRight>\n              {isAuthenticated ? (\n                <>\n                  <LinkContainer to=\"/settings\">\n                    <NavItem>Settings</NavItem>\n                  </LinkContainer>\n                  <NavItem onClick={handleLogout}>Logout</NavItem>\n                </>\n              ) : (\n                <>\n                  <LinkContainer to=\"/signup\">\n                    <NavItem>Signup</NavItem>\n                  </LinkContainer>\n                  <LinkContainer to=\"/login\">\n                    <NavItem>Login</NavItem>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Routes appProps={{ isAuthenticated, userHasAuthenticated }} />\n      </div>\n    )\n  );\n}\n\nexport default withRouter(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Amplify from 'aws-amplify';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport config from './config';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"notes\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      },\n    ]\n  }\n});\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}